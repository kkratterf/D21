generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Directory {
  id            String    @id @default(uuid())
  name          String
  description   String?
  slug          String    @unique
  imageUrl      String?
  link          String?
  tags          String[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String
  featured      Boolean   @default(false)
  featuredOrder Int?
  latitude      Float?
  location      String?
  longitude     Float?
  visible       Boolean   @default(false)
  startups      Startup[]

  @@map("Directory")
}

model TeamSize {
  id        String    @id @default(uuid())
  name      String    @unique
  minSize   Int
  maxSize   Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  startups  Startup[]
}

model FundingStage {
  id        String    @id @default(uuid())
  name      String    @unique
  order     Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  startups  Startup[]
}

model Startup {
  id             String        @id @default(uuid())
  name           String
  description    String
  websiteUrl     String?
  logoUrl        String?
  slug           String        @unique
  foundedAt      DateTime?
  location       String
  teamSizeId     String?
  fundingStageId String?
  contactEmail   String?
  linkedinUrl    String?
  metadata       Json?
  tags           String[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  directoryId    String
  latitude       Float
  longitude      Float
  visible        Boolean       @default(false)
  amountRaised   Decimal?      @db.Decimal(12, 2)
  currency       String?
  directory      Directory     @relation(fields: [directoryId], references: [id])
  fundingStage   FundingStage? @relation(fields: [fundingStageId], references: [id])
  teamSize       TeamSize?     @relation(fields: [teamSizeId], references: [id])
}
