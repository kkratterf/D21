generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Directory {
  id            String    @id @default(uuid())
  name          String
  description   String?
  slug          String    @unique
  imageUrl      String?
  link          String?
  tags          String[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String
  startups      Startup[]
  featured      Boolean   @default(false)
  location      String?
  longitude     Float?
  latitude      Float?
  featuredOrder Int?

  @@map("Directory")
}

model TeamSize {
  id          String    @id @default(uuid())
  name        String    @unique
  minSize     Int
  maxSize     Int?
  startups    Startup[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model FundingStage {
  id          String    @id @default(uuid())
  name        String    @unique
  order       Int
  startups    Startup[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Startup {
  id            String        @id @default(uuid())
  name          String
  description   String
  websiteUrl    String?
  logoUrl       String?
  slug          String        @unique
  foundedAt     DateTime?
  location      String
  longitude     Float
  latitude      Float
  amountRaised  Decimal?      @db.Decimal(12, 2)
  teamSize      TeamSize?     @relation(fields: [teamSizeId], references: [id])
  teamSizeId    String?
  fundingStage  FundingStage? @relation(fields: [fundingStageId], references: [id])
  fundingStageId String?
  contactEmail  String?
  linkedinUrl   String?
  metadata      Json?
  tags          String[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  directory     Directory     @relation(fields: [directoryId], references: [id])
  directoryId   String
  visible       Boolean   @default(false)
}
